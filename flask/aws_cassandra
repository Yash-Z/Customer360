(venv) ubuntu@ip-172-31-39-69:~/customer360$ sudo service cassandra start
(venv) ubuntu@ip-172-31-39-69:~/customer360$ nodetool status
Datacenter: datacenter1
=======================
Status=Up/Down
|/ State=Normal/Leaving/Joining/Moving
--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack
UN  127.0.0.1  112.13 KiB  256          100.0%            11ff57cd-4104-45ea-844d-76b485b1eb7b  rack1

(venv) ubuntu@ip-172-31-39-69:~/customer360$ ipython
Python 3.5.2 (default, Nov 12 2018, 13:43:14) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.5.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from cassandra.cluster import Cluster                                                                                                                                                                        

In [2]: cluster=Cluster()                                                                                                                                                                                            

In [3]: session=cluster.connect()                                                                                                                                                                                    

In [4]: print(session)                                                                                                                                                                                               
<cassandra.cluster.Session object at 0x7f25449e4390>

In [5]: exit                                                                                                                                                                                                         
(venv) ubuntu@ip-172-31-39-69:~/customer360$ cqlsh
Connection error: ('Unable to connect to any servers', {'127.0.0.1': TypeError('ref() does not take keyword arguments',)})
(venv) ubuntu@ip-172-31-39-69:~/customer360$ cqlsh
Connection error: ('Unable to connect to any servers', {'127.0.0.1': TypeError('ref() does not take keyword arguments',)})
(venv) ubuntu@ip-172-31-39-69:~/customer360$ sudo service cassandra start
(venv) ubuntu@ip-172-31-39-69:~/customer360$ cqlsh
Connection error: ('Unable to connect to any servers', {'127.0.0.1': TypeError('ref() does not take keyword arguments',)})
(venv) ubuntu@ip-172-31-39-69:~/customer360$ nodetool status
Datacenter: datacenter1
=======================
Status=Up/Down
|/ State=Normal/Leaving/Joining/Moving
--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack
UN  127.0.0.1  112.13 KiB  256          100.0%            11ff57cd-4104-45ea-844d-76b485b1eb7b  rack1

(venv) ubuntu@ip-172-31-39-69:~/customer360$ ipython
Python 3.5.2 (default, Nov 12 2018, 13:43:14) 
Type 'copyright', 'credits' or 'license' for more information
IPython 7.5.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: from cassandra.cluster import Cluster                                                                                                                                                                        

In [2]: cluster=Cluster()                                                                                                                                                                                            

In [3]: session=cluster.connect()                                                                                                                                                                                    

In [4]: query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStartegy','replication_factor':2};"                                                                                                

In [5]: session.execute(query)                                                                                                                                                                                       
---------------------------------------------------------------------------
ConfigurationException                    Traceback (most recent call last)
<ipython-input-5-6ea9a2d45157> in <module>
----> 1 session.execute(query)

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

ConfigurationException: <Error from server: code=2300 [Query invalid because of configuration issue] message="Unable to find replication strategy class 'org.apache.cassandra.locator.SimpleStartegy'">

In [6]: query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStrategy','replication_factor':2};"                                                                                                

In [7]: session.execute(query)                                                                                                                                                                                       
Out[7]: <cassandra.cluster.ResultSet at 0x7fa6402fb240>

In [8]: session_1=cluster.session('fraud_detection')                                                                                                                                                                 
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-8-80420d815f90> in <module>
----> 1 session_1=cluster.session('fraud_detection')

AttributeError: 'Cluster' object has no attribute 'session'

In [9]: session=cluster.connect()                                                                                                                                                                                    

In [10]: session_1=cluster.connect('fraud_detection')                                                                                                                                                                

In [11]: print(session_1)                                                                                                                                                                                            
<cassandra.cluster.Session object at 0x7fa6317d6198>

In [12]: session_1.execute("CREATE TABLE credible(a INT PRIMARY KEY, name text);")                                                                                                                                   
Out[12]: <cassandra.cluster.ResultSet at 0x7fa630f7dac8>

In [13]: session_1.execute("INSERT INTO credible(1, 'yash');")                                                                                                                                                       
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-13-494e0a4213fd> in <module>
----> 1 session_1.execute("INSERT INTO credible(1, 'yash');")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:21 no viable alternative at input '1' (INSERT INTO credible([1]...)">

In [14]: session_1.execute("CREATE INDEX 'abc' ON name(credible);")                                                                                                                                                  
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-14-ea8d6b6c51b4> in <module>
----> 1 session_1.execute("CREATE INDEX 'abc' ON name(credible);")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 extraneous input 'abc' expecting K_ON (CREATE INDEX 'abc' [ON]...)">

In [15]: session_1.execute("CREATE INDEX 'abc' ON name (credible);")                                                                                                                                                 
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-15-5beb5c1c8c1d> in <module>
----> 1 session_1.execute("CREATE INDEX 'abc' ON name (credible);")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 extraneous input 'abc' expecting K_ON (CREATE INDEX 'abc' [ON]...)">

In [16]: session_1.execute("CREATE INDEX abc ON name (credible);")                                                                                                                                                   
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-16-13fdd01ab3c3> in <module>
----> 1 session_1.execute("CREATE INDEX abc ON name (credible);")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table name"

In [17]: session_1.execute("CREATE INDEX abc ON name (credible);");                                                                                                                                                  
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-17-51ee92afae8f> in <module>
----> 1 session_1.execute("CREATE INDEX abc ON name (credible);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table name"

In [18]: session_1.execute("CREATE INDEX abc ON name(credible);");                                                                                                                                                   
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-18-9524b4d233b6> in <module>
----> 1 session_1.execute("CREATE INDEX abc ON name(credible);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table name"

In [19]: session_1.execute("CREATE INDEX name ON name(credible);");                                                                                                                                                  
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-19-be07b9390685> in <module>
----> 1 session_1.execute("CREATE INDEX name ON name(credible);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table name"

In [20]: session_1.execute("CREATE INDEX credible ON name(credible);");                                                                                                                                              
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-20-d73c80b3c0bf> in <module>
----> 1 session_1.execute("CREATE INDEX credible ON name(credible);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="unconfigured table name"

In [21]: session_1                                                                                                                                                                                                   
Out[21]: <cassandra.cluster.Session at 0x7fa6317d6198>

In [22]: session_1.execute("CREATE INDEX abc ON credible(name);");                                                                                                                                                   

In [23]: session_1.execute("Select name from credible;");                                                                                                                                                            

In [24]: session_1.execute("SELECT name FROM credible;");                                                                                                                                                            

In [25]: result = session_1.execute("SELECT name FROM credible;");                                                                                                                                                   

In [26]: result.all()                                                                                                                                                                                                
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-26-445947e9c847> in <module>
----> 1 result.all()

AttributeError: 'ResultSet' object has no attribute 'all'

In [27]: result                                                                                                                                                                                                      
Out[27]: <cassandra.cluster.ResultSet at 0x7fa630f997b8>

In [28]: result.one()                                                                                                                                                                                                

In [29]: from cassandra.cluster import ResultSet                                                                                                                                                                     

In [30]: from cassandra.query import SimpleStatement                                                                                                                                                                 

In [31]: statement = SimpleStatement("SELECT * FROM credible")                                                                                                                                                       

In [32]: for x in session_1.execute(statement): 
    ...:     print(x) 
    ...:                                                                                                                                                                                                             

In [33]: statement = SimpleStatement("SELECT * FROM credible;")                                                                                                                                                      

In [34]: for x in session_1.execute(statement): 
    ...:     print(x) 
    ...:                                                                                                                                                                                                             

In [35]: for x in session_1.execute(statement): 
    ...:     process_user(x) 
    ...:                                                                                                                                                                                                             

In [36]: print(statement 
    ...: )                                                                                                                                                                                                           
<SimpleStatement query="SELECT * FROM credible;", consistency=Not Set>

In [37]: session_1.execute("CREATE INDEX 1,'yash' ON credible(a,name);");                                                                                                                                            
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-37-598ef3d65f42> in <module>
----> 1 session_1.execute("CREATE INDEX 1,'yash' ON credible(a,name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 mismatched input '1' expecting K_ON (CREATE INDEX [1],...)">

In [38]: session_1.execute("CREATE INDEX 2,'yash' ON credible(a,name);");                                                                                                                                            
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-38-bd13462fa7da> in <module>
----> 1 session_1.execute("CREATE INDEX 2,'yash' ON credible(a,name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 mismatched input '2' expecting K_ON (CREATE INDEX [2],...)">

In [39]: session_1.execute("CREATE INDEX 'yash' ON credible(a,name);");                                                                                                                                              
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-39-13e8e7fd0a94> in <module>
----> 1 session_1.execute("CREATE INDEX 'yash' ON credible(a,name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 extraneous input 'yash' expecting K_ON (CREATE INDEX 'yash' [ON]...)">

In [40]: session_1.execute("CREATE INDEX 'yash' ON credible(name);");                                                                                                                                                
---------------------------------------------------------------------------
SyntaxException                           Traceback (most recent call last)
<ipython-input-40-8ece89b03f01> in <module>
----> 1 session_1.execute("CREATE INDEX 'yash' ON credible(name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

SyntaxException: <Error from server: code=2000 [Syntax error in CQL query] message="line 1:13 extraneous input 'yash' expecting K_ON (CREATE INDEX 'yash' [ON]...)">

In [41]: session_1.execute("CREATE INDEX yash ON credible(name);");                                                                                                                                                  
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-41-8a627e26792f> in <module>
----> 1 session_1.execute("CREATE INDEX yash ON credible(name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="Index yash is a duplicate of existing index abc"

In [42]: session_1.execute("CREATE INDEX yash ON credible(name);");                                                                                                                                                  
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-42-8a627e26792f> in <module>
----> 1 session_1.execute("CREATE INDEX yash ON credible(name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="Index yash is a duplicate of existing index abc"

In [43]: session_1.execute("CREATE INDEX SRI ON credible(name);");                                                                                                                                                   
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-43-505eab11b320> in <module>
----> 1 session_1.execute("CREATE INDEX SRI ON credible(name);");

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="Index sri is a duplicate of existing index abc"

In [44]: from cassandra.query import BatchStatement 
    ...: from cassandra.cluster import Cluster  
    ...: cluster = Cluster() 
    ...: session=cluster.connect() 
    ...:  
    ...: # Create KeySpace 
    ...: #query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStrategy','replication_factor':2};" 
    ...: #session.execute(query) 
    ...:  
    ...: # Session 1 - Fraud Detection 
    ...: session_1=cluster.connect('fraud_detection') 
    ...: session_1.execute("CREATE TABLE credible1(id INT PRIMARY KEY, name text);") 
    ...:  
    ...:  
    ...: insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)") 
    ...: batch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM) 
    ...:  
    ...: for (name, age) in users_to_insert: 
    ...:    batch.add(insert_user, (name, age)) 
    ...:  
    ...: session.execute(batch)                                                                                                                                                                                      
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-44-cd96b751d5a5> in <module>
     13 
     14 
---> 15 insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)")
     16 batch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM)
     17 

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in prepare(self, query, custom_payload, keyspace)
   2491         try:
   2492             future.send_request()
-> 2493             query_id, bind_metadata, pk_indexes, result_metadata, result_metadata_id = future.result()
   2494         except Exception:
   2495             log.exception("Error preparing query:")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="Unknown identifier id"

In [45]: from cassandra.query import BatchStatement 
    ...: from cassandra.cluster import Cluster  
    ...: cluster = Cluster() 
    ...: session=cluster.connect() 
    ...:  
    ...: # Create KeySpace 
    ...: #query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStrategy','replication_factor':2};" 
    ...: #session.execute(query) 
    ...:  
    ...: # Session 1 - Fraud Detection 
    ...: session_1=cluster.connect('fraud_detection') 
    ...: session_1.execute("CREATE TABLE credible1(id INT PRIMARY KEY, name text);") 
    ...:  
    ...:  
    ...: insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)") 
    ...: batch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM) 
    ...:  
    ...: for (name, age) in users_to_insert: 
    ...:    batch.add(insert_user, (name, age)) 
    ...:  
    ...: session.execute(batch)                                                                                                                                                                                      
---------------------------------------------------------------------------
AlreadyExists                             Traceback (most recent call last)
<ipython-input-45-cd96b751d5a5> in <module>
     10 # Session 1 - Fraud Detection
     11 session_1=cluster.connect('fraud_detection')
---> 12 session_1.execute("CREATE TABLE credible1(id INT PRIMARY KEY, name text);")
     13 
     14 

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

AlreadyExists: Table 'fraud_detection.credible1' already exists


[1]+  Stopped                 ipython
(venv) ubuntu@ip-172-31-39-69:~/customer360$ fg
ipython
In [46]: from cassandra.query import BatchStatement 
    ...: from cassandra.cluster import Cluster  
    ...: cluster = Cluster() 
    ...: session=cluster.connect() 
    ...:  
    ...: # Create KeySpace 
    ...: #query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStrategy','replication_factor':2};" 
    ...: #session.execute(query) 
    ...:  
    ...: # Session 1 - Fraud Detection 
    ...: session_1=cluster.connect('fraud_detection') 
    ...: #session_1.execute("CREATE TABLE credible1(id INT PRIMARY KEY, name text);") 
    ...:  
    ...: batch = BatchStatement() 
    ...: batch.add(SimpleStatement("INSERT INTO credible1 (id,name) VALUES (%s, %s)"), (1,'yash')) 
    ...: #batch.add(SimpleStatement("DELETE FROM pending_users WHERE name=%s"), (name,)) 
    ...: session.execute(batch) 
    ...: """ 
    ...: insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)") 
    ...: batch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM) 
    ...:  
    ...: for (name, age) in users_to_insert: 
    ...:    batch.add(insert_user, (name, age)) 
    ...:  
    ...: session.execute(batch) 
    ...: """ 
    ...:  
    ...:                                                                                                                                                                                                             
---------------------------------------------------------------------------
InvalidRequest                            Traceback (most recent call last)
<ipython-input-46-fbed0f64381a> in <module>
     15 batch.add(SimpleStatement("INSERT INTO credible1 (id,name) VALUES (%s, %s)"), (1,'yash'))
     16 #batch.add(SimpleStatement("DELETE FROM pending_users WHERE name=%s"), (name,))
---> 17 session.execute(batch)
     18 """
     19 insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)")

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in execute(self, query, parameters, timeout, trace, custom_payload, execution_profile, paging_state, host)
   2238         """
   2239         return self.execute_async(query, parameters, trace, custom_payload,
-> 2240                                   timeout, execution_profile, paging_state, host).result()
   2241 
   2242     def execute_async(self, query, parameters=None, trace=False, custom_payload=None,

~/customer360/venv/lib/python3.5/site-packages/cassandra/cluster.py in result(self)
   4196             return ResultSet(self, self._final_result)
   4197         else:
-> 4198             raise self._final_exception
   4199 
   4200     def get_query_trace_ids(self):

InvalidRequest: Error from server: code=2200 [Invalid query] message="No keyspace has been specified. USE a keyspace, or explicitly specify keyspace.tablename"

In [47]: from cassandra.query import BatchStatement 
    ...: from cassandra.cluster import Cluster  
    ...: cluster = Cluster() 
    ...: session=cluster.connect() 
    ...:  
    ...: # Create KeySpace 
    ...: #query = "CREATE KEYSPACE fraud_detection WITH replication={'class':'SimpleStrategy','replication_factor':2};" 
    ...: #session.execute(query) 
    ...:  
    ...: # Session 1 - Fraud Detection 
    ...: session_1=cluster.connect('fraud_detection') 
    ...: #session_1.execute("CREATE TABLE credible1(id INT PRIMARY KEY, name text);") 
    ...:  
    ...: batch = BatchStatement() 
    ...: batch.add(SimpleStatement("INSERT INTO fraud_detection.credible1 (id,name) VALUES (%s, %s)"), (1,'yash')) 
    ...: #batch.add(SimpleStatement("DELETE FROM pending_users WHERE name=%s"), (name,)) 
    ...: session.execute(batch) 
    ...: """ 
    ...: insert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)") 
    ...: batch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM) 
    ...:  
    ...: for (name, age) in users_to_insert: 
    ...:    batch.add(insert_user, (name, age)) 
    ...:  
    ...: session.execute(batch) 
    ...: """ 
    ...:  
    ...:                                                                                                                                                                                                             
Out[47]: '\ninsert_user = session_1.prepare("INSERT INTO credible (id, name) VALUES (?,?)")\nbatch = BatchStatement(consistency_level=ConsistencyLevel.QUORUM)\n\nfor (name, age) in users_to_insert:\n   batch.add(insert_user, (name, age))\n\nsession.execute(batch)\n'

In [48]: from cassandra.cluster import ResultSet                                                                                                                                                                     


[1]+  Stopped                 ipython
(venv) ubuntu@ip-172-31-39-69:~/customer360$ fg
ipython
In [49]: from cassandra.query import SimpleStatement 
    ...: statement = SimpleStatement("SELECT * FROM fraud_detection.credible1", fetch_size=1) 
    ...: for user_row in session.execute(statement): 
    ...:     process_user(user_row) 
    ...:                                                                                                                                                                                                             
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-49-755dc9094333> in <module>
      2 statement = SimpleStatement("SELECT * FROM fraud_detection.credible1", fetch_size=1)
      3 for user_row in session.execute(statement):
----> 4     process_user(user_row)
      5 

NameError: name 'process_user' is not defined

In [50]: rows=session_1.execute('SELECT * FROM credible1')                                                                                                                                                           

In [51]: for roow in rows: 
    ...:     print(roow.id,roow.name) 
    ...:                                                                                                                                                                                                             
1 yash

In [52]:
